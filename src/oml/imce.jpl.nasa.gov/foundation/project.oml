@dc:creator "Jet Propulsion Laboratory"
@dc:rights "Copyright 2010-2020, by the California Institute of Technology. ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged. Any commercial use must be negotiated with the Office of Technology Transfer at the California Institute of Technology. 
This software may be subject to U.S. export control laws. By accepting this software, the user agrees to comply with all applicable U.S. export laws and regulations. User has the responsibility to obtain export licenses, or other export authority as may be required before exporting such information to foreign countries or providing access to foreign persons."
@dc:description "The Project vocabulary defines concepts and properties for describing a project in terms of its stakeholders, concerns, work breakdown, and deliverables. It provides a basis for specialization by domain experts."
@dc:title "Project"
vocabulary <http://imce.jpl.nasa.gov/foundation/project#> as project {

	extends <http://purl.org/dc/elements/1.1/> as dc

	extends <http://www.w3.org/2001/XMLSchema#> as xsd

	extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs

	extends <http://imce.jpl.nasa.gov/foundation/base#> as base

	extends <http://imce.jpl.nasa.gov/foundation/mission#> as mission

	extends <http://imce.jpl.nasa.gov/foundation/analysis#> as analysis

	@rdfs:label "Assigned Element"
	@dc:description "[=AssignedElement=] is the domain of [=isAssignedTo=]."
	aspect AssignedElement

	@rdfs:label "Bound Element"
	@dc:description "[=BoundElement=] is the domain of [=binds=]."
	aspect BoundElement

	@rdfs:label "Developed Element"
	@dc:description "[=DevelopedElement=] is the domain of [=manifests=]."
	aspect DevelopedElement < analysis:CharacterizedElement

	@rdfs:label "Realized Element"
	@dc:description "[=RealizedElement=] is the domain and range of [=realizes=]."
	aspect RealizedElement

	@rdfs:label "Supplied Element"
	@dc:description "A [=SuppliedElement=] is the range of [=supplies=]."
	aspect SuppliedElement

	@rdfs:label "Authority"
	@dc:description "An [=Authority=] is any entity that asserts a fact in a model. Example [=Authority=]s include [=Program=], [=Project=], and [=WorkPackage=]. (The association of an 
    	[=Authority=] with its asserted facts requires mechanisms outside the vocabulary of OML and OWL proper, e.g., named graphs. Authorization is conveyed by the organization of statements in a repository.)"
	concept Authority

	@rdfs:label "Concern"
	@dc:description "<para>A [=Concern=] is a specific interest that one or more [=Stakeholder=]s have in the successful completion of a [=Project=] or [=Program=] and its [=Mission=]s. </para>"
	concept Concern < base:IdentifiedElement, base:AggregatedElement [
		restricts all base:aggregates to Concern
		restricts all base:isAggregatedIn to Concern
	]

	@rdfs:label "Deliverable"
	@dc:description "A [=Deliverable=] is the result of successful execution of a [=Process=]. It may be a prerequisite to another [=Process=]."
	concept Deliverable < base:IdentifiedElement

	@rdfs:label "Development State"
	@dc:description "A [=DevelopmentState=] is a kind of [=Deliverable=] that represents a defined condition for a [=DevelopedElement=]. [=DevelopmentState=]s may be unique to the 
	    [=DevelopedElement=]; example [=DevelopmentState=]s for a [=Product=] include Preliminary, Draft, and Final."
	concept DevelopmentState < analysis:Characterization, Deliverable [
		restricts all analysis:characterizes to DevelopedElement
	]

	@rdfs:label "Facility"
	@dc:description "A [=Facility=] is any asset (e.g., laboratory, assembly facility, test facility, etc.) whose [=DevelopmentState=] may be a [=Deliverable=] for a project process."
	concept Facility < base:IdentifiedElement, DevelopedElement

	@rdfs:label "Interchange"
	@dc:description "An [=Interchange=] represents the intended joint behavior of a pair of [=Process=]es. It indicates that a [=Deliverable=] may be delivered by one [=Process=] 
    	and received by the other [=Process=]."
	concept Interchange < base:IdentifiedElement

	@rdfs:label "Interchange Point"
	@dc:description "An [=InterchangePoint=] is a feature of a [=Process=] that permits it to participate
		in an [=Interchange=]."
	concept InterchangePoint < base:IdentifiedElement

	@rdfs:label "Organization"
	@dc:description "An [=Organization=] [=hasResponsibilityFor=] zero or more [=Authority=]s."
	concept Organization < base:IdentifiedElement

	@rdfs:label "Person"
	@dc:description "A [=Person=] is an individual human being. A [=Person=] [=belongsTo=] zero or more [=Organization=]s."
	concept Person < base:IdentifiedElement

	@rdfs:label "Policy"
	@dc:description "A [=Policy=] represents a specific exercise of authority that [=binds=] one or more model elements."
	concept Policy < base:IdentifiedElement

	@rdfs:label "Process"
	@dc:description "A [=Process=] is an activity authorized by a [=WorkPackage=] in support of delivering a [=Component=] or producing a [=Product=]. Examples include <emphasis>
    	design trajectory</emphasis>, <emphasis>conduct trade study</emphasis>, and <emphasis>review subsystem design</emphasis>."
	concept Process < base:IdentifiedElement, AssignedElement, RealizedElement [
		restricts all realizes to Process
		restricts all isRealizedBy to Process
	]

	@rdfs:label "Product"
	@dc:description "A [=Product=] is a document or other artifact supplied by a [=WorkPackage=]. Example [=Product=]s include trade study reports, design documents, and inspection reports."
	concept Product < base:AggregatedElement, base:IdentifiedElement, DevelopedElement, SuppliedElement [
		restricts all base:aggregates to Product
		restricts all base:isAggregatedIn to Product
	]

	@rdfs:label "Program"
	@dc:description "A [=Program=] is an [=Authority=] that [=authorizes=] zero or more [=Project=]s."
	concept Program < Authority [
		restricts all authorizes to Project
	]

	@rdfs:label "Project"
	@dc:description "A [=Project=] is an [=Authority=] that [=supplies=] a related set of [=Mission=]s in pursuit of a set of [=Objective=]s."
	concept Project < Authority, RealizedElement [
		restricts all authorizes to WorkPackage
		restricts all isAuthorizedBy to Program
		restricts all realizes to Project
		restricts all isRealizedBy to Project
		restricts all supplies to mission:Mission
	]

	@rdfs:label "Role"
	@dc:description "A [=Role=] corresponds to a set of assignments meant to be filled by a single [=Person=]."
	concept Role < base:IdentifiedElement

	@rdfs:label "Stakeholder"
	@dc:description "A [=Stakeholder=] is a person or organization with a recognized interest in the successful completion of a [=Project=] or [=Program=]. Example 
    	[=Stakeholder=]s include scientists, NASA Directorates, nuclear safety advocates, and the general public."
	concept Stakeholder < base:IdentifiedElement

	@rdfs:label "Work Package"
	@dc:description "A [=WorkPackage=] is an [=Authority=] subordinate to a [=Project=]
		that [=produces=] definite [=Product=]s and/or [=supplies=] definite
		[=SuppliedElements=] in the context of that [=Project=]."
	concept WorkPackage < base:Package, Authority, RealizedElement [
		restricts all authorizes to WorkPackage
		restricts all isRealizedBy to WorkPackage
		restricts all realizes to WorkPackage
		restricts all supplies to mission:Component
	]

	@rdfs:label "Approves"
	@dc:description "A [=Role=] [=approves=] zero or more [=Product=]s."
	relation entity Approves [
		from Role
		to Product
		@rdfs:label "approves"
		forward approves
		@rdfs:label "is approved by"
		reverse isApprovedBy
		asymmetric
		irreflexive
	] < HasAssignment 

	@rdfs:label "Authorizes"
	@dc:description "An [=Authority=] [=authorizes=] zero or more [=Authority=]s."
	relation entity Authorizes [
		from Authority
		to Authority
		@rdfs:label "authorizes"
		forward authorizes
		@rdfs:label "is authorized by"
		reverse isAuthorizedBy
		inverse functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Belongs To"
	@dc:description "A [=Person=] [=belongsTo=] zero or more [=Organization=]s."
	relation entity BelongsTo [
		from Person
		to Organization
		@rdfs:label "belongs to"
		forward belongsTo
	]

	@rdfs:label "Binds"
	@dc:description "A [=Policy=] [=binds=] zero or more [=BoundElement=]s."
	relation entity Binds [
		from Policy
		to BoundElement
		@rdfs:label "binds"
		forward binds
		@rdfs:label "is bound by"
		reverse isBoundBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Concurs"
	@dc:description "A [=Role=] [=concurs=] in zero or more [=Product=]s."
	relation entity Concurs [
		from Role
		to Product
		@rdfs:label "concurs"
		forward concurs
		@rdfs:label "is concurred by"
		reverse isConcurredBy
		asymmetric
		irreflexive
	] < HasAssignment 

	@rdfs:label "Delegates To"
	@dc:description "A [=Role=] [=delegatesTo=] zero or more [=Role=]s."
	relation entity DelegatesTo [
		from Role
		to Role
		@rdfs:label "delegates to"
		forward delegatesTo
		@rdfs:label "is delegate of"
		reverse isDelegateOf
		inverse functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Delivers"
	@dc:description "An [=InterchangePoint=] [=delivers=] zero or more [=Deliverable=]s."
	relation entity Delivers [
		from InterchangePoint
		to Deliverable
		@rdfs:label "delivers"
		forward delivers
		@rdfs:label "is delivered by"
		reverse isDeliveredBy
		inverse functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Describes"
	@dc:description "A [=Product=] [=describes=] zero or more [=DevelopedElement=]s."
	relation entity Describes [
		from Product
		to DevelopedElement
		@rdfs:label "describes"
		forward describes
		@rdfs:label "is described by"
		reverse isDescribedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Executes"
	@dc:description "An [=Authority=] [=executes=] zero or more [=Process=]es."
	relation entity Executes [
		from Authority
		to Process
		@rdfs:label "executes"
		forward executes
		@rdfs:label "is executed by"
		reverse isExecutedBy
		inverse functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Has Assignment"
	@dc:description "A [=Role=] [=hasAssignment=] zero or more [=AssignedElement=]es."
	relation entity HasAssignment [
		from Role
		to AssignedElement
		@rdfs:label "has assignment"
		forward hasAssignment
		@rdfs:label "is assigned to"
		reverse isAssignedTo
		asymmetric
		irreflexive
	]

	@rdfs:label "Has Participant"
	@dc:description "An [=Interchange=] [=hasParticipant=] zero or more [=Deliverable=]s."
	relation entity HasParticipant [
		from Interchange
		to Deliverable
		@rdfs:label "has participant"
		forward hasParticipant
		@rdfs:label "participates in"
		reverse participatesIn
		asymmetric
		irreflexive
	]

	@rdfs:label "Has Responsibility For"
	@dc:description "An [=Organization=] [=hasResponsibilityFor=] zero or more [=Authority=]s."
	relation entity HasResponsibilityFor [
		from Organization
		to Authority
		@rdfs:label "has responsibility for"
		forward hasResponsibilityFor
		@rdfs:label "is responsibility of"
		reverse isResponsibilityOf
		inverse functional
	]

	@rdfs:label "Has Role"
	@dc:description "A [=Person=] [=hasRole=] zero or more [=Role=]s."
	relation entity HasRole [
		from Person
		to Role
		@rdfs:label "has role"
		forward hasRole
		@rdfs:label "is role of"
		reverse isRoleOf
		inverse functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Interchanges Through"
	@dc:description "A [=Process=] [=interchangesThrough=] zero or more [=InterchangePoint=]s."
	relation entity InterchangesThrough [
		from Process
		to InterchangePoint
		@rdfs:label "interchanges through"
		forward interchangesThrough
		@rdfs:label "is interchange point for"
		reverse isInterchangePointFor
		inverse functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Invokes"
	@dc:description "A [=Process=] [=invokes=] zero or more [=Process=]es."
	relation entity Invokes [
		from Process
		to Process
		@rdfs:label "invokes"
		forward invokes
		@rdfs:label "is invoked by"
		reverse isInvokedBy
		irreflexive
	]

	@rdfs:label "Involves"
	@dc:description "An [=Interchange=] [=involves=] zero or more [=Process=]es."
	relation entity Involves [
		from Interchange
		to Process
		@rdfs:label "involves"
		forward involves
		@rdfs:label "is involved in"
		reverse isInvolvedIn
		asymmetric
		irreflexive
	]

	@rdfs:label "Involves1"
	@dc:description "[=involves1=] and [=involves2=] are distinguishable specializations of
		[=involves=]. These specializations are employed to indicate distinct ends of an
		[=Interchange=]."
	relation entity Involves1 [
		from Interchange
		to Process
		@rdfs:label "involves1"
		forward involves1
		@rdfs:label "is involved in 1"
		reverse isInvolvedIn1
		functional
		asymmetric
		irreflexive
	] < Involves 

	@rdfs:label "Involves2"
	@dc:description "[=involves1=] and [=involves2=] are distinguishable specializations of
		[=involves=]. These specializations are employed to indicate distinct ends of an
		[=Interchange=]."
	relation entity Involves2 [
		from Interchange
		to Process
		@rdfs:label "involves2"
		forward involves2
		@rdfs:label "is involved in 2"
		reverse isInvolvedIn2
		functional
		asymmetric
		irreflexive
	] < Involves 

	@rdfs:label "Manifests"
	@dc:description "A [=DevelopedElement=] [=manifests=] zero or more [=DevelopmentState=]s."
	relation entity Manifests [
		from DevelopedElement
		to DevelopmentState
		@rdfs:label "manifests"
		forward manifests
		@rdfs:label "is manifested by"
		reverse isManfestedBy
		inverse functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Prepares"
	@dc:description "A [=Role=] [=prepares=] zero or more [=Product=]s."
	relation entity Prepares [
		from Role
		to Product
		@rdfs:label "prepares"
		forward prepares
		@rdfs:label "is prepared by"
		reverse isPreparedBy
		asymmetric
		irreflexive
	] < HasAssignment 

	@rdfs:label "Produces"
	@dc:description "A [=Authority=] [=produces=] zero or more [=Product=]s."
	relation entity Produces [
		from Authority
		to Product
		@rdfs:label "produces"
		forward produces
		@rdfs:label "is produced by"
		reverse isProducedBy
		inverse functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Realizes"
	@dc:description "A [=RealizedElement=] [=realizes=] zero or more [=RealizedElement=]s."
	relation entity Realizes [
		from RealizedElement
		to RealizedElement
		@rdfs:label "realizes"
		forward realizes
		@rdfs:label "is realized by"
		reverse isRealizedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Receives"
	@dc:description "An [=InterchangePoint=] [=receives=] zero or more [=Deliverable=]s."
	relation entity Receives [
		from InterchangePoint
		to Deliverable
		@rdfs:label "receives"
		forward receives
		@rdfs:label "is received by"
		reverse isReceivedBy
		asymmetric
		irreflexive
	] < AssignedElement 

	@rdfs:label "Relies On"
	@dc:description "An [=Authority=] [=reliesOn=] zero or more [=DevelopedElement=]s."
	relation entity ReliesOn [
		from Authority
		to DevelopedElement
		@rdfs:label "relies on"
		forward reliesOn
		@rdfs:label "is relied on by"
		reverse isReliedOnBy
		asymmetric
		irreflexive
	] < AssignedElement 

	@rdfs:label "Represents"
	@dc:description "An [=Stakeholder=] [=represents=] zero or more [=Concern=]s."
	relation entity Represents [
		from Stakeholder
		to Concern
		@rdfs:label "represents"
		forward represents
		@rdfs:label "is represented by"
		reverse isRepresentedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Supplies"
	@dc:description "An [=Authority=] [=supplies=] zero or more [=SuppliedElement=]s."
	relation entity Supplies [
		from Authority
		to SuppliedElement
		@rdfs:label "supplies"
		forward supplies
		@rdfs:label "is supplied by"
		reverse isSuppliedBy
		inverse functional
		asymmetric
		irreflexive
	] < AssignedElement 

	@rdfs:label "is required not later than"
	@dc:description "A [=Deliverable=] [=isRequiredNotLaterThan=] some [=dateTime=]."
	scalar property isRequiredNotLaterThan [
		domain Deliverable
		range xsd:dateTime
	]

	ref concept mission:Objective < Concern

	ref concept mission:Component < DevelopedElement, RealizedElement, SuppliedElement [
		restricts all isRealizedBy to mission:Component
		restricts all realizes to mission:Component
		restricts all isSuppliedBy to WorkPackage
	]

	ref concept mission:Function < RealizedElement [
		restricts all isRealizedBy to mission:Function
		restricts all realizes to mission:Function
	]

	ref concept mission:Interface < DevelopedElement, RealizedElement [
		restricts all isRealizedBy to mission:Interface
		restricts all realizes to mission:Interface
	]

	ref concept mission:Junction < DevelopedElement, RealizedElement [
		restricts all realizes to mission:Junction
		restricts all isRealizedBy to mission:Junction
	]

	ref concept mission:Mission < RealizedElement, SuppliedElement [
		restricts all isRealizedBy to mission:Mission
		restricts all realizes to mission:Mission
		restricts all isSuppliedBy to Project
	]
}