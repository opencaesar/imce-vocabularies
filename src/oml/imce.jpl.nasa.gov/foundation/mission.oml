@dc:creator "Jet Propulsion Laboratory"
@dc:rights "Copyright 2010-2020, by the California Institute of Technology. ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged. Any commercial use must be negotiated with the Office of Technology Transfer at the California Institute of Technology. 
This software may be subject to U.S. export control laws. By accepting this software, the user agrees to comply with all applicable U.S. export laws and regulations. User has the responsibility to obtain export licenses, or other export authority as may be required before exporting such information to foreign countries or providing access to foreign persons."
@dc:description "The Mission vocabulary defines concepts and properties for describing missions in terms of their objectives, their constituent components, the functions those components perform, and the requirements that specify them."
@dc:title "Mission"
vocabulary <http://imce.jpl.nasa.gov/foundation/mission#> as mission {

	extends <http://purl.org/dc/elements/1.1/> as dc

	extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs

	extends <http://www.w3.org/2001/XMLSchema#> as xsd

	extends <http://imce.jpl.nasa.gov/foundation/base#> as base

	@rdfs:label "Performing Element"
	@dc:description "[=PerformingElement=] is the domain of [=performs=].
		Any concept that [=performs=] a [=Function=] should specialize [=PerformingElement=]."
	aspect PerformingElement

	@rdfs:label "Presenting Element"
	@dc:description "[=PresentingElement=] is the domain of [=presents=].
		Any concept that [=presents=] an [=Interface=] should specialize [=PresentingElement=]."
	aspect PresentingElement

	@rdfs:label "Specified Element"
	@dc:description "[=SpecifiedElement=] is the range of [=specifies=].
		Any concept or reified relation that [=isSpecifiedBy=] a [=Requirement=] should specialize
		[=SpecifiedElement=]."
	aspect SpecifiedElement

	@rdfs:label "Presenting Element"
	@dc:description "[=TraversingElement=] is the domain of [=traverses=].
		Any concept that [=traverses=] an [=Interface=] should specialize [=TraversingElement=]."
	@rdfs:label "Traversing Element"
	aspect TraversingElement

	@rdfs:label "Component"
	@dc:description "<para>A [=Component=] is a designed entity that exists to 
		perform a [=Function=]. Example [=Component=]s
    	include launch vehicle, spacecraft, telecommunication subsystem, flight software, attitude control software, and mission operations team."
	concept Component < base:AggregatedElement, base:ContainedElement, base:Container, base:IdentifiedElement, PerformingElement, PresentingElement, SpecifiedElement [
		restricts all base:aggregates to Component
		restricts all base:isAggregatedIn to Component
		restricts all base:contains to Component
		restricts all base:isContainedIn to Component
	]

	@rdfs:label "Environment"
	@dc:description "An [=Environment=] represents a set of conditions under which a [=Component=] [=performs=]
		some [=Function=]. Example environments include low earth orbit, trans-Jupiter cruise, and Martian north polar surface."
	concept Environment < base:AggregatedElement, base:IdentifiedElement [
		restricts all base:isAggregatedIn to Environment
		restricts all base:aggregates to Environment
	]

	@rdfs:label "Flow"
	@dc:description "A [=Flow=] is a non-discrete transfer of substance or energy between [=Component=]s. <em>Non-discrete</em> implies 
		that the substance or energy has no natural boundaries. Examples of [=Flow=] include electric  current, propellant, and heat."
	concept Flow < base:ContainedElement, base:Container, base:IdentifiedElement, TraversingElement [
		restricts all base:isContainedIn to Flow
		restricts all base:contains to Flow
	]

	@rdfs:label "Function"
	@dc:description "A [=Function=] is a purpose for which a [=PerformingElement=] is included in a designed system."
	concept Function < base:IdentifiedElement

	@rdfs:label "Interface"
	@dc:description "An [=Interface=] represents a set of mechanical, electrical, signal, or other features that describe some aspect
		of a [=PresentingElement=]'s connection to or interaction with another [=PresentingElement=]."
	concept Interface < base:IdentifiedElement, PresentingElement

	@rdfs:label "Item"
	@dc:description "An [=Item=] is a discrete unit of material or information exchanged between two [=PresentingElement=]s."
	concept Item < base:ContainedElement, base:Container, base:IdentifiedElement, TraversingElement [
		restricts all base:isContainedIn to Item
		restricts all base:contains to Item
	]

	@rdfs:label "Junction"
	@dc:description "An [=Junction=] represents a set of mechanical, electrical, signal, or other properties that are common to a set of mutually connected [=Interface=]s."
	concept Junction < base:ContainedElement, base:Container, base:IdentifiedElement [
		restricts all base:isContainedIn to Junction
		restricts all base:contains to Junction
	]

	@rdfs:label "Material Item"
	@dc:description "A [=MaterialItem=] is a discrete unit of material exchanged between two [=Function=]s. Example [=MaterialItem=]s include rock hammer and soil sample."
	concept MaterialItem < Item [
		restricts all base:contains to MaterialItem
		restricts all base:isContainedIn to MaterialItem
	]

	@rdfs:label "Message"
	@dc:description "A [=Message=] is a discrete unit of information exchanged between two [=Function=]s. Example [=Message=]s include command, command response, and file contents."
	concept Message < Item [
		restricts all base:contains to Message
		restricts all base:isContainedIn to Message
	]

	@rdfs:label "Mission"
	@dc:description "A [=Mission=] is a [=PerformingElement=] that [=pursue=]s [=Objective=]s."
	concept Mission < base:IdentifiedElement, PerformingElement, PresentingElement, SpecifiedElement

	@rdfs:label "Objective"
	@dc:description "An [=Objective=] represents a specific interest that one or more stakeholders have in the successful execution of a mission."
	concept Objective < base:AggregatedElement, base:IdentifiedElement [
		restricts all base:aggregates to Objective
		restricts all base:isAggregatedIn to Objective
	]

	@rdfs:label "Product"
	@dc:description "A [=Product=] is a tangible artifact that results from achievement of mission objectives."
	concept Product < base:AggregatedElement, base:IdentifiedElement [
		restricts all base:isAggregatedIn to Product
		restricts all base:aggregates to Product
	]

	@rdfs:label "Requirement"
	@dc:description "A [=Requirement=] specifies an assertion about a [=SpecifiedElement=] that must be true for every acceptable realization of that element."
	concept Requirement < base:IdentifiedElement

	@rdfs:label "Deploys"
	@dc:description "A [=Mission=] [=deploys=] zero or more [=Component=]s."
	relation entity Deploys [
		from Mission
		to Component
		@rdfs:label "deploys"
		forward deploys
		@rdfs:label "is deployed by"
		reverse isDeployedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Induces"
	@dc:description "A [=Component=] [=induces=] zero or more [=Environment=]s."
	relation entity Induces [
		from Component
		to Environment
		@rdfs:label "induces"
		forward induces
		@rdfs:label "is induced by"
		reverse isInducedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Influences"
	@dc:description "An [=Environment=] [=influences=] zero or more [=Component=]s."
	relation entity Influences [
		from Environment
		to Component
		@rdfs:label "influences"
		forward influences
		@rdfs:label "is influenced by"
		reverse isInfluencedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Invokes"
	@dc:description "A [=Function=] [=invokes=] zero or more [=Function=]s."
	relation entity Invokes [
		from Function
		to Function
		@rdfs:label "invokes"
		forward invokes
		@rdfs:label "is invoked by"
		reverse isInvokedBy
	]

	@rdfs:label "Traverses"
	@dc:description "A [=TraversingElement=] [=traverses=] zero or more [=Junction=]s."
	relation entity Traverses [
		from TraversingElement
		to Junction
		@rdfs:label "traverses"
		forward traverses
		@rdfs:label "is traversed by"
		reverse isTraversedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Joins"
	@dc:description "A [=Junction=] [=joins=] zero or more [=Interface=]s."
	relation entity Joins [
		from Junction
		to Interface
		@rdfs:label "joins"
		forward joins
		@rdfs:label "is joined in"
		reverse isJoinedIn
		asymmetric
		irreflexive
	]

	@rdfs:label "Joins1"
	@dc:description "[=joins1=] and [=joins2=] are distinguishable specializations of
		[=joins=]. These specializations are employed to indicate distinct ends of a
		[=Junction=]."
	relation entity Joins1 [
		from Junction
		to Interface
		@rdfs:label "joins1"
		forward joins1
		@rdfs:label "is joined in1"
		reverse isJoinedIn1
		asymmetric
		irreflexive
	] < Joins 

	@rdfs:label "Joins2"
	@dc:description "[=joins1=] and [=joins2=] are distinguishable specializations of
		[=joins=]. These specializations are employed to indicate distinct ends of a
		[=Junction=]."
	relation entity Joins2 [
		from Junction
		to Interface
		@rdfs:label "joins2"
		forward joins2
		@rdfs:label "is joined in2"
		reverse isJoinedIn2
		asymmetric
		irreflexive
	] < Joins 

	@rdfs:label "Performs"
	@dc:description "A [=PerformingElement=] [=performs=] zero or more [=Function=]s."
	relation entity Performs [
		from PerformingElement
		to Function
		@rdfs:label "performs"
		forward performs
		@rdfs:label "is performed by"
		reverse isPerformedBy
		inverse functional
		asymmetric
		irreflexive
	] < SpecifiedElement 

	@rdfs:label "Presents"
	@dc:description "A [=PresentingElement=] [=presents=] zero or more [=Interface=]s."
	relation entity Presents [
		from PresentingElement
		to Interface
		@rdfs:label "presents"
		forward presents
		@rdfs:label "is presented by"
		reverse isPresentedBy
		inverse functional
		asymmetric
		irreflexive
	] < SpecifiedElement

	@rdfs:label "Produces"
	@dc:description "A [=PerformingElement=] [=produces=] zero or more [=Product=]s."
	relation entity Produces [
		from PerformingElement
		to Product
		@rdfs:label "produces"
		forward produces
		@rdfs:label "is produced by"
		reverse isProducedBy
		inverse functional
		asymmetric
		irreflexive
	] < SpecifiedElement 

	@rdfs:label "Pursues"
	@dc:description "A [=Mission=] [=pursues=] zero or more [=Objective=]s."
	relation entity Pursues [
		from Mission
		to Objective
		@rdfs:label "pursues"
		forward pursues
		@rdfs:label "is pursued by"
		reverse isPursuedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Refines"
	@dc:description "A [=Requirement=] [=refines=] zero or more [=Requirement=]s."
	relation entity Refines [
		from Requirement
		to Requirement
		@rdfs:label "refines"
		forward refines
		@rdfs:label "is refined by"
		reverse isRefinedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Specifies"
	@dc:description "A [=Requirement=] [=specifies=] zero or more
		[=SpecifiedElement=]s."
	relation entity Specifies [
		from Requirement
		to SpecifiedElement
		@rdfs:label "specifies"
		forward specifies
		@rdfs:label "is specified by"
		reverse isSpecifiedBy
		functional
		asymmetric
		irreflexive
	]

	@rdfs:label "Transfers"
	@dc:description "An [=Interface=] [=transfers=] zero or more [=TraversingElement=]s."
	relation entity Transfers [
		from Interface
		to TraversingElement
		@rdfs:label "transfers"
		forward transfers
		asymmetric
		irreflexive
	]

	@rdfs:label "Transfers In"
	@dc:description "An [=Interface=] [=transfersIn=] zero or more [=TraversingElement=]s."
	relation entity TransfersIn [
		from Interface
		to TraversingElement
		@rdfs:label "transfers in"
		forward transfersIn
		asymmetric
		irreflexive
	] < Transfers, SpecifiedElement

	@rdfs:label "Transfers Out"
	@dc:description "An [=Interface=] [=transfersOut=] zero or more [=TraversingElement=]s."
	relation entity TransfersOut [
		from Interface
		to TraversingElement
		@rdfs:label "transfers out"
		forward transfersOut
		asymmetric
		irreflexive
	] < Transfers, SpecifiedElement 

	@rdfs:label "has rationale"
	@dc:description "[=hasRationale=] explains why a [=Requirement=] exists and why it [=specifies=] what it does."
	scalar property hasRationale [
		domain Requirement
		range xsd:string
		functional
	]

	ref relation entity base:Contains < SpecifiedElement
}