@dc:creator "Jet Propulsion Laboratory"
@dc:rights "Copyright 2010-2020, by the California Institute of Technology. ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged. Any commercial use must be negotiated with the Office of Technology Transfer at the California Institute of Technology.
This software may be subject to U.S. export control laws. By accepting this software, the user agrees to comply with all applicable U.S. export laws and regulations. User has the responsibility to obtain export licenses, or other export authority as may be required before exporting such information to foreign countries or providing access to foreign persons."
@dc:description "The Analysis vocabulary defines general concepts and properties for analyses (e.g., trade studies, driving requirements analysis, etc.). It provides a basis for specialization by domain experts."
@dc:title "Analysis"
vocabulary <http://imce.jpl.nasa.gov/foundation/analysis#> as analysis {

	extends <http://purl.org/dc/elements/1.1/> as dc

	extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs

	extends <http://www.w3.org/2001/XMLSchema#> as xsd

	extends <http://bipm.org/jcgm/vim4#> as vim4

	extends <http://imce.jpl.nasa.gov/foundation/base#> as base

	extends <http://imce.jpl.nasa.gov/foundation/mission#> as mission

	@rdfs:label "Characterized Element"
	@dc:description "[=CharacterizedElement=] is the range of [=characterizes=]."
	aspect CharacterizedElement

	@rdfs:label "Analyzed Element"
	@dc:description "[=AnalyzedElement=] is the range of [=analyzes=]."
	aspect AnalyzedElement

	@rdfs:label "Assumption"
	@dc:description "An [=Assumption=] is a [=Characterization=] that is taken to be true for the purpose of analysis."
	concept Assumption :> Characterization

	@rdfs:label "Characterization"
	@dc:description "A [=Characterization=] provides a parametric or other qualification of zero or more model elements."
	concept Characterization :> base:IdentifiedElement

	@rdfs:label "Driving Requirements Explanation"
	@dc:description "A [=DrivingRequirementsExplanation=] provides the rationale for designating a set of [=Requirement=]s as <emphasis>driving</emphasis>, and makes the 
    designation via the [=explains=] property."
	concept DrivingRequirementsExplanation :> Explanation [
		restricts all relation explains to mission:Requirement
	]

	@rdfs:label "Constraint"
	@dc:description """A [=Constraint=] expresses a condition asserted to be true in some context."""
	concept Constraint :> Explanation
	
	ref concept vim4:IndividualNominalProperty :> CharacterizedElement
	
	concept NominalPropertyValueConstraint :> Constraint [
//		restricts all relation analyzes to vim4:NominalPropertyValue
		restricts all relation explains to vim4:IndividualNominalProperty
	]
	
	ref aspect vim4:QuantityValue :> AnalyzedElement
	ref aspect vim4:IndividualQuantity :> CharacterizedElement
	
	@rdfs:label "Quantity Value Constraint"
	@dc:description """A [=QuantityValueConstraint expresses a relation between a [=vim4:QuantityValue=] and a [=vim4:IndividualQuantity=]."""
	concept QuantityValueConstraint :> Constraint [
		restricts all relation analyzes to vim4:QuantityValue
		restricts all relation explains to vim4:IndividualQuantity
	]
	
	@rdfs:label "Ordinal Quantity Value Constraint"
	@dc:description """An [=OrdinalQuantityValueConstraint expresses a relation between a [=vim4:OrdinalQuantityValue=] and a [=vim4:IndividualOrdinalQuantity=]."""
	concept OrdinalQuantityValueConstraint :> QuantityValueConstraint [
		restricts all relation analyzes to vim4:OrdinalQuantityValue
		restricts all relation explains to vim4:IndividualOrdinalQuantity
	]
	
	@rdfs:label "Unitary Quantity Value Constraint"
	@dc:description """A [=UnitaryQuantityValueConstraint expresses a relation between a [=vim4:UnitaryQuantityValue=] and a [=vim4:IndividualUnitaryQuantity=]."""
	concept UnitaryQuantityValueConstraint :> QuantityValueConstraint [
		restricts all relation analyzes to vim4:UnitaryQuantityValue
		restricts all relation explains to vim4:IndividualUnitaryQuantity
	]
	
	@rdfs:label "quantity value relation"
	@dc:description "[=quantityValueRelation=] is the enumeration of possible order relations in a [=UnitaryQuantityValueConstraint=]."
	enumerated scalar quantityValueRelation [        	// These are HTML entity names.
		"equals",
		"lt",
		"le",
		"gt",
		"ge",
		"ne"
	]
	
	@rdfs:label "has quantity value relation"
	@dc:description """[=hasQuantityValueRelation=] associates a [=UnitaryQuantityValueConstraint=] with a single [=quantityValueRelation=]."""
	scalar property hasQuantityValueRelation [
		domain QuantityValueConstraint
		range quantityValueRelation
		functional
	]
	
	@rdfs:label "Constrains"
	@dc:description """[=Constrains=] is a subproperty of [=Explains=]."""
	relation entity Constrains :> Explains [
		from Constraint
		to analysis:CharacterizedElement
		@rdfs:label "constrains"
		forward constrains
		@rdfs:label "is constrained by"
		reverse isConstrainedBy
	]
	
	@rdfs:label "Explanation"
	@dc:description "An [=Explanation=] captures or summarizes the results of an analysis activity and relates it to one or more other model elements. It may
    contain narrative prose directly or provide a reference to external products."
	concept Explanation :> Characterization, base:AggregatedElement

	@rdfs:label "Fact"
	@dc:description "A [=Fact=] is an [=Assumption=] taken because it is thought to be true."
	concept Fact :> Assumption

	@rdfs:label "GlossaryEntry"
	@dc:description "[=GlossaryEntry=] is a [=Characterization=] that associates a term with a definition."
	concept GlossaryEntry :> Characterization

	@rdfs:label "Key Requirements Explanation"
	@dc:description "A [=KeyRequirementsExplanation=] provides the rationale for designating a set of [=Requirement=]s 
    as <emphasis>key</emphasis>, and makes the designation via the [=explains=] property."
	concept KeyRequirementsExplanation :> Explanation [
		restricts all relation explains to mission:Requirement
	]

	concept Scenario :> Characterization
	
	@rdfs:label "Trade Study"
	@dc:description "A [=TradeStudy=] explains some set of model elements and their properties through comparison with alternatives."
	concept TradeStudy :> Explanation

	@rdfs:label "Analyzes"
	@dc:description "An [=Explanation=] [=analyzes=] zero or more [=AnalyzedElement=]s."
	relation entity Analyzes [
		from Explanation
		to AnalyzedElement
		@rdfs:label "analyzes"
		forward analyzes
		@rdfs:label "is analyzed by"
		reverse isAnalyzedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Characterizes"
	@dc:description "A [=Characterization=] [=characterizes=] zero or more [=CharacterizedElement=]s."
	relation entity Characterizes :> mission:SpecifiedElement [
		from Characterization
		to CharacterizedElement
		@rdfs:label "characterizes"
		forward characterizes
		@rdfs:label "is characterized by"
		reverse isCharacterizedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Explains"
	@dc:description "An [=Explanation=] [=explains=] zero or more [=CharacterizedElement=]s."
	relation entity Explains :> Characterizes [
		from Explanation
		to CharacterizedElement
		@rdfs:label "explains"
		forward explains
		@rdfs:label "is explained by"
		reverse isExplainedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Limits"
	@rdfs:comment "An [=Assumption=] [=limits=] zero or more [=CharacterizedElement=]s."
	relation entity Limits :> Characterizes [
		from Assumption
		to CharacterizedElement
		@rdfs:label "limits"
		forward limits
		@rdfs:label "is limited by"
		reverse isLimitedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Validates"
	@dc:description "An [=Explanation=] [=validates=] zero or more [=CharacterizedElement=]s."
	relation entity Validates :> Explains [
		from Explanation
		to CharacterizedElement
		@rdfs:label "validates"
		forward validates
		@rdfs:label "is validated by"
		reverse isValidatedBy
		asymmetric
		irreflexive
	]

	@rdfs:label "Has Quantity Value"
	@dc:description """[=HasQuantityValue=] relates a [=QuantityValueConstraint=] to a constraining [=vim4:QuantityValue=]."""
	relation entity HasQuantityValue :> Analyzes [
		from QuantityValueConstraint
		to vim4:QuantityValue
		@rdfs:label "has quantity value"
		forward hasQuantityValue
		asymmetric
	]
	
	@rdfs:label "Applies During"
	@dc:description """A [=mission:Requirement=] [=appliesDuring=] zero or more [=Scenario=]s. If a
					   [=mission:Requirement=] [=appliesDuring=] multiple [=Scenario=]s, it applies
					   during each separately."""
	relation entity AppliesDuring [
		from mission:Requirement
		to Scenario
		@rdfs:label "applies during"
		forward appliesDuring
		asymmetric
	]
	
	@rdfs:label "Requires"
	@dc:description """A [=mission:Requirement=] [=requires=] zero or more [=Constraint=]s."""
	relation entity Requires [
		from mission:Requirement
		to Constraint
		@rdfs:label "requires"
		forward requires
		asymmetric
	]
	
	@rdfs:label "Forbids"
	@dc:description """A [=mission:Requirement=] [=forbids=] zero or more [=Constraint=]s."""
	relation entity Forbids [
		from mission:Requirement
		to Constraint
		@rdfs:label "forbids"
		forward forbids
		asymmetric
	]
	
	@rdfs:label "Asserts"
	@dc:description """A [=Scenario=] [=asserts=] zero or more [=Constraint=]s."""
	relation entity Asserts [
		from Scenario
		to Constraint
		@rdfs:label "asserts"
		forward asserts
		asymmetric
	]
	
	@rdfs:label "Refutes"
	@dc:description """A [=Scenario=] [=refutes=] zero or more [=Constraint=]s."""
	relation entity Refutes [
		from Scenario
		to Constraint
		@rdfs:label "refutes"
		forward refutes
		asymmetric
	]
	
	@rdfs:label "has glossary definition"
	scalar property hasGlossaryDefinition :> base:hasDescription [
		domain GlossaryEntry
		range xsd:string
	]

	@rdfs:label "has glossary term"
	scalar property hasGlossaryTerm :> base:hasCanonicalName [
		domain GlossaryEntry
		range xsd:string
	]

	ref aspect vim4:Object :> analysis:CharacterizedElement
	
	ref concept mission:Requirement :> analysis:CharacterizedElement

	// All concept specializations of the aspect vim4:IndividualProperty are all analysis:Characterization(s).
  
	ref concept vim4:IndividualNominalProperty :> analysis:Characterization
	ref concept vim4:IndividualUnitaryQuantity :> analysis:Characterization
	ref concept vim4:IndividualOrdinalQuantity :> analysis:Characterization

	ref relation entity vim4:Characterizes :> analysis:Characterizes
}