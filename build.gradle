/* 
 * The Maven coordinates for the project artifact
 */
ext.title = "IMCE Vocabularies"
description='The set of IMCE vocabularies'
group = 'io.opencaesar.ontologies'
version = '5.1.0'

apply from: "${rootDir}/gradle/maven-deployment.gradle"

/* 
 * The Gradle task dependencies 
 */
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'io.opencaesar.owl:owl-reason-gradle:2.+'
        classpath 'io.opencaesar.owl:owl-doc-gradle:2.+'
        classpath 'io.opencaesar.oml:oml-merge-gradle:2.+'
        classpath 'io.opencaesar.adapters:oml2owl-gradle:2.+'
    }
}

// Dataset-specific variables
ext {
    // Root ontology IRI of the dataset
    rootIri = 'http://imce.jpl.nasa.gov/foundation/bundle'
}

/*
 * The repositories to look up OML dependencies in
 */
repositories {
    mavenLocal()
    mavenCentral()
}

/*
 * The configuration of OML dependencies
 */
configurations {
    oml
}

/*
 * The OML dependencies
 */
dependencies {
    oml "io.opencaesar.ontologies:metrology-vocabularies:7.+"
}

/*
 * A task to extract and merge the OML dependencies
 */
task downloadDependencies(type:io.opencaesar.oml.merge.OmlMergeTask) {
    inputZipPaths = configurations.oml.files
    outputCatalogFolder = file('build/oml')
}

/*
 * A task to convert the OML catalog to OWL catalog
 */
task omlToOwl(type:io.opencaesar.oml2owl.Oml2OwlTask, dependsOn: downloadDependencies) {
    // OML catalog
    inputCatalogPath = file('catalog.xml')
    // OWL catalog
    outputCatalogPath = file('build/owl/catalog.xml')
}

/*
 * A task to run the Openllet reasoner on the OWL catalog
 */
task owlReason(type:io.opencaesar.owl.reason.OwlReasonTask, dependsOn: omlToOwl) {
    // OWL catalog
    catalogPath = file('build/owl/catalog.xml')
    // Input ontology IRI to reason on
    inputOntologyIri = "$rootIri"
    // Entailment statements to generate and the ontologies to persist them in
    specs = [
        "$rootIri/classes = ALL_SUBCLASS",
        "$rootIri/properties = INVERSE_PROPERTY | ALL_SUBPROPERTY",
        "$rootIri/individuals = ALL_INSTANCE | DATA_PROPERTY_VALUE | OBJECT_PROPERTY_VALUE | SAME_AS"
    ]
    // Junit error report
    reportPath = file('build/reports/reasoning.xml')
}

/*
 * A task to generate documentation for the OWL catalog
 */
task generateDocs (type: io.opencaesar.owl.doc.OwlDocTask, dependsOn: owlReason) {
    // OWL catalog
    inputCatalogPath = file('build/owl/catalog.xml')
    // OWL catalog title
    inputCatalogTitle = project.title
    // OWL catalog version
    inputCatalogVersion = project.version
    // OWL Ontology Iris
    inputOntologyIris = [ "$rootIri/classes", "$rootIri/properties",  "$rootIri/individuals" ]
    // Output folder
    outputFolderPath = file('build/docs')
    // Output case sensitivie path
    outputCaseSensitive = org.gradle.internal.os.OperatingSystem.current().isLinux()
}

/*
 * A task to build the project, which executes several tasks together
 */
tasks.named('build') {
    dependsOn owlReason
}

/*
 * Publish to Maven spec
 */
 
task omlZip(type: Zip) {
    from file('src/oml')
    include "**/*.oml"
    destinationDirectory = file('build/libs')
    archiveBaseName = project.name
    archiveVersion = project.version
}

publishing.publications.maven.artifact omlZip

/*
 * Integration with the Eclipse IDE
 */ 

apply plugin: 'eclipse'

eclipse {
    synchronizationTasks downloadDependencies
}
